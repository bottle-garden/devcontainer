"use strict";
/*!
 * Copyright 2019 Omar Tawfik. Please see LICENSE file at the root of this repository.
 */
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spread = (this && this.__spread) || function () {
    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));
    return ar;
};
Object.defineProperty(exports, "__esModule", { value: true });
var vscode_languageserver_1 = require("vscode-languageserver");
var cache_1 = require("../util/cache");
var RenamingService = /** @class */ (function () {
    function RenamingService() {
    }
    RenamingService.prototype.fillCapabilities = function (capabilities) {
        capabilities.renameProvider = {
            prepareProvider: true,
        };
    };
    RenamingService.prototype.activate = function (connection, documents) {
        connection.onPrepareRename(function (params) {
            var uri = params.textDocument.uri;
            var compilation = cache_1.accessCache(documents, uri);
            var target = compilation.getTargetAt(params.position);
            if (!target) {
                return undefined;
            }
            return {
                placeholder: target.name,
                range: target.range,
            };
        });
        connection.onRenameRequest(function (params) {
            var _a;
            var uri = params.textDocument.uri;
            var compilation = cache_1.accessCache(documents, uri);
            var target = compilation.getTargetAt(params.position);
            if (!target) {
                return undefined;
            }
            var action = compilation.actions.get(target.name);
            if (!action) {
                return undefined;
            }
            return {
                changes: (_a = {},
                    _a[uri] = __spread([action.range], action.references).map(function (range) {
                        var start = range.start, end = range.end;
                        return vscode_languageserver_1.TextEdit.replace(vscode_languageserver_1.Range.create(start.line, start.character + 1, end.line, end.character - 1), params.newName);
                    }),
                    _a),
            };
        });
    };
    return RenamingService;
}());
exports.RenamingService = RenamingService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2aWNlcy9yZW5hbWluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFSCwrREFBd0c7QUFFeEcsdUNBQTRDO0FBRTVDO0lBQUE7SUFrREEsQ0FBQztJQWpEUSwwQ0FBZ0IsR0FBdkIsVUFBd0IsWUFBZ0M7UUFDdEQsWUFBWSxDQUFDLGNBQWMsR0FBRztZQUM1QixlQUFlLEVBQUUsSUFBSTtTQUN0QixDQUFDO0lBQ0osQ0FBQztJQUVNLGtDQUFRLEdBQWYsVUFBZ0IsVUFBdUIsRUFBRSxTQUF3QjtRQUMvRCxVQUFVLENBQUMsZUFBZSxDQUFDLFVBQUEsTUFBTTtZQUN2QixJQUFBLDZCQUFHLENBQXlCO1lBQ3BDLElBQU0sV0FBVyxHQUFHLG1CQUFXLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBRWhELElBQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3hELElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1gsT0FBTyxTQUFTLENBQUM7YUFDbEI7WUFFRCxPQUFPO2dCQUNMLFdBQVcsRUFBRSxNQUFNLENBQUMsSUFBSTtnQkFDeEIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO2FBQ3BCLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztRQUVILFVBQVUsQ0FBQyxlQUFlLENBQUMsVUFBQSxNQUFNOztZQUN2QixJQUFBLDZCQUFHLENBQXlCO1lBQ3BDLElBQU0sV0FBVyxHQUFHLG1CQUFXLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBRWhELElBQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3hELElBQUksQ0FBQyxNQUFNLEVBQUU7Z0JBQ1gsT0FBTyxTQUFTLENBQUM7YUFDbEI7WUFFRCxJQUFNLE1BQU0sR0FBRyxXQUFXLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDcEQsSUFBSSxDQUFDLE1BQU0sRUFBRTtnQkFDWCxPQUFPLFNBQVMsQ0FBQzthQUNsQjtZQUVELE9BQU87Z0JBQ0wsT0FBTztvQkFDTCxHQUFDLEdBQUcsSUFBRyxVQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUssTUFBTSxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUMsVUFBQSxLQUFLO3dCQUMzQyxJQUFBLG1CQUFLLEVBQUUsZUFBRyxDQUFXO3dCQUM3QixPQUFPLGdDQUFRLENBQUMsT0FBTyxDQUNyQiw2QkFBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxTQUFTLEdBQUcsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLFNBQVMsR0FBRyxDQUFDLENBQUMsRUFDMUUsTUFBTSxDQUFDLE9BQU8sQ0FDZixDQUFDO29CQUNKLENBQUMsQ0FBQzt1QkFDSDthQUNGLENBQUM7UUFDSixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFDSCxzQkFBQztBQUFELENBbERBLEFBa0RDLElBQUE7QUFsRFksMENBQWUiLCJmaWxlIjoic3JjL3NlcnZpY2VzL3JlbmFtaW5nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyohXG4gKiBDb3B5cmlnaHQgMjAxOSBPbWFyIFRhd2Zpay4gUGxlYXNlIHNlZSBMSUNFTlNFIGZpbGUgYXQgdGhlIHJvb3Qgb2YgdGhpcyByZXBvc2l0b3J5LlxuICovXG5cbmltcG9ydCB7IElDb25uZWN0aW9uLCBUZXh0RG9jdW1lbnRzLCBUZXh0RWRpdCwgUmFuZ2UsIFNlcnZlckNhcGFiaWxpdGllcyB9IGZyb20gXCJ2c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXJcIjtcbmltcG9ydCB7IExhbmd1YWdlU2VydmljZSB9IGZyb20gXCIuLi9zZXJ2ZXJcIjtcbmltcG9ydCB7IGFjY2Vzc0NhY2hlIH0gZnJvbSBcIi4uL3V0aWwvY2FjaGVcIjtcblxuZXhwb3J0IGNsYXNzIFJlbmFtaW5nU2VydmljZSBpbXBsZW1lbnRzIExhbmd1YWdlU2VydmljZSB7XG4gIHB1YmxpYyBmaWxsQ2FwYWJpbGl0aWVzKGNhcGFiaWxpdGllczogU2VydmVyQ2FwYWJpbGl0aWVzKTogdm9pZCB7XG4gICAgY2FwYWJpbGl0aWVzLnJlbmFtZVByb3ZpZGVyID0ge1xuICAgICAgcHJlcGFyZVByb3ZpZGVyOiB0cnVlLFxuICAgIH07XG4gIH1cblxuICBwdWJsaWMgYWN0aXZhdGUoY29ubmVjdGlvbjogSUNvbm5lY3Rpb24sIGRvY3VtZW50czogVGV4dERvY3VtZW50cyk6IHZvaWQge1xuICAgIGNvbm5lY3Rpb24ub25QcmVwYXJlUmVuYW1lKHBhcmFtcyA9PiB7XG4gICAgICBjb25zdCB7IHVyaSB9ID0gcGFyYW1zLnRleHREb2N1bWVudDtcbiAgICAgIGNvbnN0IGNvbXBpbGF0aW9uID0gYWNjZXNzQ2FjaGUoZG9jdW1lbnRzLCB1cmkpO1xuXG4gICAgICBjb25zdCB0YXJnZXQgPSBjb21waWxhdGlvbi5nZXRUYXJnZXRBdChwYXJhbXMucG9zaXRpb24pO1xuICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgcGxhY2Vob2xkZXI6IHRhcmdldC5uYW1lLFxuICAgICAgICByYW5nZTogdGFyZ2V0LnJhbmdlLFxuICAgICAgfTtcbiAgICB9KTtcblxuICAgIGNvbm5lY3Rpb24ub25SZW5hbWVSZXF1ZXN0KHBhcmFtcyA9PiB7XG4gICAgICBjb25zdCB7IHVyaSB9ID0gcGFyYW1zLnRleHREb2N1bWVudDtcbiAgICAgIGNvbnN0IGNvbXBpbGF0aW9uID0gYWNjZXNzQ2FjaGUoZG9jdW1lbnRzLCB1cmkpO1xuXG4gICAgICBjb25zdCB0YXJnZXQgPSBjb21waWxhdGlvbi5nZXRUYXJnZXRBdChwYXJhbXMucG9zaXRpb24pO1xuICAgICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgY29uc3QgYWN0aW9uID0gY29tcGlsYXRpb24uYWN0aW9ucy5nZXQodGFyZ2V0Lm5hbWUpO1xuICAgICAgaWYgKCFhY3Rpb24pIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY2hhbmdlczoge1xuICAgICAgICAgIFt1cmldOiBbYWN0aW9uLnJhbmdlLCAuLi5hY3Rpb24ucmVmZXJlbmNlc10ubWFwKHJhbmdlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgc3RhcnQsIGVuZCB9ID0gcmFuZ2U7XG4gICAgICAgICAgICByZXR1cm4gVGV4dEVkaXQucmVwbGFjZShcbiAgICAgICAgICAgICAgUmFuZ2UuY3JlYXRlKHN0YXJ0LmxpbmUsIHN0YXJ0LmNoYXJhY3RlciArIDEsIGVuZC5saW5lLCBlbmQuY2hhcmFjdGVyIC0gMSksXG4gICAgICAgICAgICAgIHBhcmFtcy5uZXdOYW1lLFxuICAgICAgICAgICAgKTtcbiAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==
