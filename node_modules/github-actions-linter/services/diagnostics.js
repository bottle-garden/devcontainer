"use strict";
/*!
 * Copyright 2019 Omar Tawfik. Please see LICENSE file at the root of this repository.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var vscode_languageserver_1 = require("vscode-languageserver");
var cache_1 = require("../util/cache");
var DiagnosticsService = /** @class */ (function () {
    function DiagnosticsService() {
    }
    DiagnosticsService.prototype.activate = function (connection, documents) {
        connection.onDidOpenTextDocument(function (params) {
            var _a = params.textDocument, uri = _a.uri, version = _a.version;
            connection.sendDiagnostics({
                uri: uri,
                diagnostics: provideDiagnostics(documents, uri, version),
            });
        });
        documents.onDidChangeContent(function (params) {
            var _a = params.document, uri = _a.uri, version = _a.version;
            connection.sendDiagnostics({
                uri: params.document.uri,
                diagnostics: provideDiagnostics(documents, uri, version),
            });
        });
        connection.onDidCloseTextDocument(function (params) {
            connection.sendDiagnostics({
                uri: params.textDocument.uri,
                diagnostics: [],
            });
        });
        function provideDiagnostics(documents, uri, version) {
            var compilation = cache_1.accessCache(documents, uri, version);
            return compilation.diagnostics.map(function (diagnostic) {
                return vscode_languageserver_1.Diagnostic.create(diagnostic.range, diagnostic.message);
            });
        }
    };
    return DiagnosticsService;
}());
exports.DiagnosticsService = DiagnosticsService;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9zZXJ2aWNlcy9kaWFnbm9zdGljcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBRUgsK0RBQStFO0FBRS9FLHVDQUE0QztBQUU1QztJQUFBO0lBZ0NBLENBQUM7SUEvQlEscUNBQVEsR0FBZixVQUFnQixVQUF1QixFQUFFLFNBQXdCO1FBQy9ELFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxVQUFBLE1BQU07WUFDL0IsSUFBQSx3QkFBc0MsRUFBcEMsWUFBRyxFQUFFLG9CQUErQixDQUFDO1lBQzdDLFVBQVUsQ0FBQyxlQUFlLENBQUM7Z0JBQ3pCLEdBQUcsS0FBQTtnQkFDSCxXQUFXLEVBQUUsa0JBQWtCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUM7YUFDekQsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFFSCxTQUFTLENBQUMsa0JBQWtCLENBQUMsVUFBQSxNQUFNO1lBQzNCLElBQUEsb0JBQWtDLEVBQWhDLFlBQUcsRUFBRSxvQkFBMkIsQ0FBQztZQUN6QyxVQUFVLENBQUMsZUFBZSxDQUFDO2dCQUN6QixHQUFHLEVBQUUsTUFBTSxDQUFDLFFBQVEsQ0FBQyxHQUFHO2dCQUN4QixXQUFXLEVBQUUsa0JBQWtCLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUM7YUFDekQsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFFSCxVQUFVLENBQUMsc0JBQXNCLENBQUMsVUFBQSxNQUFNO1lBQ3RDLFVBQVUsQ0FBQyxlQUFlLENBQUM7Z0JBQ3pCLEdBQUcsRUFBRSxNQUFNLENBQUMsWUFBWSxDQUFDLEdBQUc7Z0JBQzVCLFdBQVcsRUFBRSxFQUFFO2FBQ2hCLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUFDO1FBRUgsU0FBUyxrQkFBa0IsQ0FBQyxTQUF3QixFQUFFLEdBQVcsRUFBRSxPQUFlO1lBQ2hGLElBQU0sV0FBVyxHQUFHLG1CQUFXLENBQUMsU0FBUyxFQUFFLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztZQUN6RCxPQUFPLFdBQVcsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLFVBQUEsVUFBVTtnQkFDM0MsT0FBTyxrQ0FBVSxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUNqRSxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUM7SUFDSCxDQUFDO0lBQ0gseUJBQUM7QUFBRCxDQWhDQSxBQWdDQyxJQUFBO0FBaENZLGdEQUFrQiIsImZpbGUiOiJzcmMvc2VydmljZXMvZGlhZ25vc3RpY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIENvcHlyaWdodCAyMDE5IE9tYXIgVGF3ZmlrLiBQbGVhc2Ugc2VlIExJQ0VOU0UgZmlsZSBhdCB0aGUgcm9vdCBvZiB0aGlzIHJlcG9zaXRvcnkuXG4gKi9cblxuaW1wb3J0IHsgSUNvbm5lY3Rpb24sIFRleHREb2N1bWVudHMsIERpYWdub3N0aWMgfSBmcm9tIFwidnNjb2RlLWxhbmd1YWdlc2VydmVyXCI7XG5pbXBvcnQgeyBMYW5ndWFnZVNlcnZpY2UgfSBmcm9tIFwiLi4vc2VydmVyXCI7XG5pbXBvcnQgeyBhY2Nlc3NDYWNoZSB9IGZyb20gXCIuLi91dGlsL2NhY2hlXCI7XG5cbmV4cG9ydCBjbGFzcyBEaWFnbm9zdGljc1NlcnZpY2UgaW1wbGVtZW50cyBMYW5ndWFnZVNlcnZpY2Uge1xuICBwdWJsaWMgYWN0aXZhdGUoY29ubmVjdGlvbjogSUNvbm5lY3Rpb24sIGRvY3VtZW50czogVGV4dERvY3VtZW50cyk6IHZvaWQge1xuICAgIGNvbm5lY3Rpb24ub25EaWRPcGVuVGV4dERvY3VtZW50KHBhcmFtcyA9PiB7XG4gICAgICBjb25zdCB7IHVyaSwgdmVyc2lvbiB9ID0gcGFyYW1zLnRleHREb2N1bWVudDtcbiAgICAgIGNvbm5lY3Rpb24uc2VuZERpYWdub3N0aWNzKHtcbiAgICAgICAgdXJpLFxuICAgICAgICBkaWFnbm9zdGljczogcHJvdmlkZURpYWdub3N0aWNzKGRvY3VtZW50cywgdXJpLCB2ZXJzaW9uKSxcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZG9jdW1lbnRzLm9uRGlkQ2hhbmdlQ29udGVudChwYXJhbXMgPT4ge1xuICAgICAgY29uc3QgeyB1cmksIHZlcnNpb24gfSA9IHBhcmFtcy5kb2N1bWVudDtcbiAgICAgIGNvbm5lY3Rpb24uc2VuZERpYWdub3N0aWNzKHtcbiAgICAgICAgdXJpOiBwYXJhbXMuZG9jdW1lbnQudXJpLFxuICAgICAgICBkaWFnbm9zdGljczogcHJvdmlkZURpYWdub3N0aWNzKGRvY3VtZW50cywgdXJpLCB2ZXJzaW9uKSxcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgY29ubmVjdGlvbi5vbkRpZENsb3NlVGV4dERvY3VtZW50KHBhcmFtcyA9PiB7XG4gICAgICBjb25uZWN0aW9uLnNlbmREaWFnbm9zdGljcyh7XG4gICAgICAgIHVyaTogcGFyYW1zLnRleHREb2N1bWVudC51cmksXG4gICAgICAgIGRpYWdub3N0aWNzOiBbXSxcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gcHJvdmlkZURpYWdub3N0aWNzKGRvY3VtZW50czogVGV4dERvY3VtZW50cywgdXJpOiBzdHJpbmcsIHZlcnNpb246IG51bWJlcik6IERpYWdub3N0aWNbXSB7XG4gICAgICBjb25zdCBjb21waWxhdGlvbiA9IGFjY2Vzc0NhY2hlKGRvY3VtZW50cywgdXJpLCB2ZXJzaW9uKTtcbiAgICAgIHJldHVybiBjb21waWxhdGlvbi5kaWFnbm9zdGljcy5tYXAoZGlhZ25vc3RpYyA9PiB7XG4gICAgICAgIHJldHVybiBEaWFnbm9zdGljLmNyZWF0ZShkaWFnbm9zdGljLnJhbmdlLCBkaWFnbm9zdGljLm1lc3NhZ2UpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG59XG4iXX0=
