"use strict";
/*!
 * Copyright 2019 Omar Tawfik. Please see LICENSE file at the root of this repository.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var BoundKind;
(function (BoundKind) {
    // Top level
    BoundKind[BoundKind["Document"] = 0] = "Document";
    BoundKind[BoundKind["Version"] = 1] = "Version";
    BoundKind[BoundKind["Workflow"] = 2] = "Workflow";
    BoundKind[BoundKind["Action"] = 3] = "Action";
    // Properties
    BoundKind[BoundKind["On"] = 4] = "On";
    BoundKind[BoundKind["Resolves"] = 5] = "Resolves";
    BoundKind[BoundKind["Uses"] = 6] = "Uses";
    BoundKind[BoundKind["Needs"] = 7] = "Needs";
    BoundKind[BoundKind["Runs"] = 8] = "Runs";
    BoundKind[BoundKind["Args"] = 9] = "Args";
    BoundKind[BoundKind["Env"] = 10] = "Env";
    BoundKind[BoundKind["Secrets"] = 11] = "Secrets";
    // Values
    BoundKind[BoundKind["StringValue"] = 12] = "StringValue";
    BoundKind[BoundKind["ObjectMember"] = 13] = "ObjectMember";
})(BoundKind = exports.BoundKind || (exports.BoundKind = {}));
var BaseBoundNode = /** @class */ (function () {
    function BaseBoundNode(kind) {
        this.kind = kind;
    }
    return BaseBoundNode;
}());
exports.BaseBoundNode = BaseBoundNode;
var BoundDocument = /** @class */ (function (_super) {
    __extends(BoundDocument, _super);
    function BoundDocument(version, workflows, actions, syntax) {
        var _this = _super.call(this, BoundKind.Document) || this;
        _this.version = version;
        _this.workflows = workflows;
        _this.actions = actions;
        _this.syntax = syntax;
        return _this;
    }
    return BoundDocument;
}(BaseBoundNode));
exports.BoundDocument = BoundDocument;
var BoundVersion = /** @class */ (function (_super) {
    __extends(BoundVersion, _super);
    function BoundVersion(version, syntax) {
        var _this = _super.call(this, BoundKind.Version) || this;
        _this.version = version;
        _this.syntax = syntax;
        return _this;
    }
    return BoundVersion;
}(BaseBoundNode));
exports.BoundVersion = BoundVersion;
var BoundWorkflow = /** @class */ (function (_super) {
    __extends(BoundWorkflow, _super);
    function BoundWorkflow(name, on, resolves, syntax) {
        var _this = _super.call(this, BoundKind.Workflow) || this;
        _this.name = name;
        _this.on = on;
        _this.resolves = resolves;
        _this.syntax = syntax;
        return _this;
    }
    return BoundWorkflow;
}(BaseBoundNode));
exports.BoundWorkflow = BoundWorkflow;
var BoundAction = /** @class */ (function (_super) {
    __extends(BoundAction, _super);
    function BoundAction(name, uses, needs, runs, args, env, secrets, syntax) {
        var _this = _super.call(this, BoundKind.Action) || this;
        _this.name = name;
        _this.uses = uses;
        _this.needs = needs;
        _this.runs = runs;
        _this.args = args;
        _this.env = env;
        _this.secrets = secrets;
        _this.syntax = syntax;
        return _this;
    }
    return BoundAction;
}(BaseBoundNode));
exports.BoundAction = BoundAction;
var BoundOn = /** @class */ (function (_super) {
    __extends(BoundOn, _super);
    function BoundOn(event, syntax) {
        var _this = _super.call(this, BoundKind.On) || this;
        _this.event = event;
        _this.syntax = syntax;
        return _this;
    }
    return BoundOn;
}(BaseBoundNode));
exports.BoundOn = BoundOn;
var BoundResolves = /** @class */ (function (_super) {
    __extends(BoundResolves, _super);
    function BoundResolves(actions, syntax) {
        var _this = _super.call(this, BoundKind.Resolves) || this;
        _this.actions = actions;
        _this.syntax = syntax;
        return _this;
    }
    return BoundResolves;
}(BaseBoundNode));
exports.BoundResolves = BoundResolves;
var BoundUses = /** @class */ (function (_super) {
    __extends(BoundUses, _super);
    function BoundUses(value, syntax) {
        var _this = _super.call(this, BoundKind.Uses) || this;
        _this.value = value;
        _this.syntax = syntax;
        return _this;
    }
    return BoundUses;
}(BaseBoundNode));
exports.BoundUses = BoundUses;
var BoundNeeds = /** @class */ (function (_super) {
    __extends(BoundNeeds, _super);
    function BoundNeeds(actions, syntax) {
        var _this = _super.call(this, BoundKind.Needs) || this;
        _this.actions = actions;
        _this.syntax = syntax;
        return _this;
    }
    return BoundNeeds;
}(BaseBoundNode));
exports.BoundNeeds = BoundNeeds;
var BoundRuns = /** @class */ (function (_super) {
    __extends(BoundRuns, _super);
    function BoundRuns(commands, syntax) {
        var _this = _super.call(this, BoundKind.Runs) || this;
        _this.commands = commands;
        _this.syntax = syntax;
        return _this;
    }
    return BoundRuns;
}(BaseBoundNode));
exports.BoundRuns = BoundRuns;
var BoundArgs = /** @class */ (function (_super) {
    __extends(BoundArgs, _super);
    function BoundArgs(args, syntax) {
        var _this = _super.call(this, BoundKind.Args) || this;
        _this.args = args;
        _this.syntax = syntax;
        return _this;
    }
    return BoundArgs;
}(BaseBoundNode));
exports.BoundArgs = BoundArgs;
var BoundEnv = /** @class */ (function (_super) {
    __extends(BoundEnv, _super);
    function BoundEnv(variables, syntax) {
        var _this = _super.call(this, BoundKind.Env) || this;
        _this.variables = variables;
        _this.syntax = syntax;
        return _this;
    }
    return BoundEnv;
}(BaseBoundNode));
exports.BoundEnv = BoundEnv;
var BoundSecrets = /** @class */ (function (_super) {
    __extends(BoundSecrets, _super);
    function BoundSecrets(secrets, syntax) {
        var _this = _super.call(this, BoundKind.Secrets) || this;
        _this.secrets = secrets;
        _this.syntax = syntax;
        return _this;
    }
    return BoundSecrets;
}(BaseBoundNode));
exports.BoundSecrets = BoundSecrets;
var BoundStringValue = /** @class */ (function (_super) {
    __extends(BoundStringValue, _super);
    function BoundStringValue(value, syntax) {
        var _this = _super.call(this, BoundKind.StringValue) || this;
        _this.value = value;
        _this.syntax = syntax;
        return _this;
    }
    return BoundStringValue;
}(BaseBoundNode));
exports.BoundStringValue = BoundStringValue;
var BoundObjectMember = /** @class */ (function (_super) {
    __extends(BoundObjectMember, _super);
    function BoundObjectMember(name, value, syntax) {
        var _this = _super.call(this, BoundKind.ObjectMember) || this;
        _this.name = name;
        _this.value = value;
        _this.syntax = syntax;
        return _this;
    }
    return BoundObjectMember;
}(BaseBoundNode));
exports.BoundObjectMember = BoundObjectMember;

//# sourceMappingURL=data:application/json;charset=utf8;base64,
