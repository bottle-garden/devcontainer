"use strict";
/*!
 * Copyright 2019 Omar Tawfik. Please see LICENSE file at the root of this repository.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var TokenKind;
(function (TokenKind) {
    // Top-level keywords
    TokenKind[TokenKind["VersionKeyword"] = 0] = "VersionKeyword";
    TokenKind[TokenKind["WorkflowKeyword"] = 1] = "WorkflowKeyword";
    TokenKind[TokenKind["ActionKeyword"] = 2] = "ActionKeyword";
    // Bottom-level keywords
    TokenKind[TokenKind["OnKeyword"] = 3] = "OnKeyword";
    TokenKind[TokenKind["ResolvesKeyword"] = 4] = "ResolvesKeyword";
    TokenKind[TokenKind["UsesKeyword"] = 5] = "UsesKeyword";
    TokenKind[TokenKind["NeedsKeyword"] = 6] = "NeedsKeyword";
    TokenKind[TokenKind["RunsKeyword"] = 7] = "RunsKeyword";
    TokenKind[TokenKind["ArgsKeyword"] = 8] = "ArgsKeyword";
    TokenKind[TokenKind["EnvKeyword"] = 9] = "EnvKeyword";
    TokenKind[TokenKind["SecretsKeyword"] = 10] = "SecretsKeyword";
    // Punctuation
    TokenKind[TokenKind["Equal"] = 11] = "Equal";
    TokenKind[TokenKind["Comma"] = 12] = "Comma";
    // Brackets
    TokenKind[TokenKind["LeftCurlyBracket"] = 13] = "LeftCurlyBracket";
    TokenKind[TokenKind["RightCurlyBracket"] = 14] = "RightCurlyBracket";
    TokenKind[TokenKind["LeftSquareBracket"] = 15] = "LeftSquareBracket";
    TokenKind[TokenKind["RightSquareBracket"] = 16] = "RightSquareBracket";
    // Misc
    TokenKind[TokenKind["Identifier"] = 17] = "Identifier";
    TokenKind[TokenKind["Comment"] = 18] = "Comment";
    // Literals
    TokenKind[TokenKind["IntegerLiteral"] = 19] = "IntegerLiteral";
    TokenKind[TokenKind["StringLiteral"] = 20] = "StringLiteral";
    // Generated
    TokenKind[TokenKind["Missing"] = 21] = "Missing";
    TokenKind[TokenKind["Unrecognized"] = 22] = "Unrecognized";
})(TokenKind = exports.TokenKind || (exports.TokenKind = {}));
function getTokenDescription(kind) {
    switch (kind) {
        case TokenKind.VersionKeyword:
            return "version";
        case TokenKind.WorkflowKeyword:
            return "workflow";
        case TokenKind.ActionKeyword:
            return "action";
        case TokenKind.OnKeyword:
            return "on";
        case TokenKind.ResolvesKeyword:
            return "resolves";
        case TokenKind.UsesKeyword:
            return "uses";
        case TokenKind.NeedsKeyword:
            return "needs";
        case TokenKind.RunsKeyword:
            return "runs";
        case TokenKind.ArgsKeyword:
            return "args";
        case TokenKind.EnvKeyword:
            return "env";
        case TokenKind.SecretsKeyword:
            return "secrets";
        case TokenKind.Equal:
            return "=";
        case TokenKind.Comma:
            return ",";
        case TokenKind.LeftCurlyBracket:
            return "{";
        case TokenKind.RightCurlyBracket:
            return "}";
        case TokenKind.LeftSquareBracket:
            return "[";
        case TokenKind.RightSquareBracket:
            return "]";
        case TokenKind.Identifier:
            return "identifier";
        case TokenKind.Comment:
            return "comment";
        case TokenKind.IntegerLiteral:
            return "integer";
        case TokenKind.StringLiteral:
            return "string";
        case TokenKind.Missing:
            return "missing";
        case TokenKind.Unrecognized:
            return "unrecognized";
    }
}
exports.getTokenDescription = getTokenDescription;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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L3Rva2Vucy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIVxuICogQ29weXJpZ2h0IDIwMTkgT21hciBUYXdmaWsuIFBsZWFzZSBzZWUgTElDRU5TRSBmaWxlIGF0IHRoZSByb290IG9mIHRoaXMgcmVwb3NpdG9yeS5cbiAqL1xuXG5pbXBvcnQgeyBSYW5nZSB9IGZyb20gXCJ2c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXNcIjtcblxuZXhwb3J0IGVudW0gVG9rZW5LaW5kIHtcbiAgLy8gVG9wLWxldmVsIGtleXdvcmRzXG4gIFZlcnNpb25LZXl3b3JkLFxuICBXb3JrZmxvd0tleXdvcmQsXG4gIEFjdGlvbktleXdvcmQsXG5cbiAgLy8gQm90dG9tLWxldmVsIGtleXdvcmRzXG4gIE9uS2V5d29yZCxcbiAgUmVzb2x2ZXNLZXl3b3JkLFxuICBVc2VzS2V5d29yZCxcbiAgTmVlZHNLZXl3b3JkLFxuICBSdW5zS2V5d29yZCxcbiAgQXJnc0tleXdvcmQsXG4gIEVudktleXdvcmQsXG4gIFNlY3JldHNLZXl3b3JkLFxuXG4gIC8vIFB1bmN0dWF0aW9uXG4gIEVxdWFsLFxuICBDb21tYSxcblxuICAvLyBCcmFja2V0c1xuICBMZWZ0Q3VybHlCcmFja2V0LFxuICBSaWdodEN1cmx5QnJhY2tldCxcbiAgTGVmdFNxdWFyZUJyYWNrZXQsXG4gIFJpZ2h0U3F1YXJlQnJhY2tldCxcblxuICAvLyBNaXNjXG4gIElkZW50aWZpZXIsXG4gIENvbW1lbnQsXG5cbiAgLy8gTGl0ZXJhbHNcbiAgSW50ZWdlckxpdGVyYWwsXG4gIFN0cmluZ0xpdGVyYWwsXG5cbiAgLy8gR2VuZXJhdGVkXG4gIE1pc3NpbmcsXG4gIFVucmVjb2duaXplZCxcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRva2VuRGVzY3JpcHRpb24oa2luZDogVG9rZW5LaW5kKTogc3RyaW5nIHtcbiAgc3dpdGNoIChraW5kKSB7XG4gICAgY2FzZSBUb2tlbktpbmQuVmVyc2lvbktleXdvcmQ6XG4gICAgICByZXR1cm4gXCJ2ZXJzaW9uXCI7XG4gICAgY2FzZSBUb2tlbktpbmQuV29ya2Zsb3dLZXl3b3JkOlxuICAgICAgcmV0dXJuIFwid29ya2Zsb3dcIjtcbiAgICBjYXNlIFRva2VuS2luZC5BY3Rpb25LZXl3b3JkOlxuICAgICAgcmV0dXJuIFwiYWN0aW9uXCI7XG5cbiAgICBjYXNlIFRva2VuS2luZC5PbktleXdvcmQ6XG4gICAgICByZXR1cm4gXCJvblwiO1xuICAgIGNhc2UgVG9rZW5LaW5kLlJlc29sdmVzS2V5d29yZDpcbiAgICAgIHJldHVybiBcInJlc29sdmVzXCI7XG4gICAgY2FzZSBUb2tlbktpbmQuVXNlc0tleXdvcmQ6XG4gICAgICByZXR1cm4gXCJ1c2VzXCI7XG4gICAgY2FzZSBUb2tlbktpbmQuTmVlZHNLZXl3b3JkOlxuICAgICAgcmV0dXJuIFwibmVlZHNcIjtcbiAgICBjYXNlIFRva2VuS2luZC5SdW5zS2V5d29yZDpcbiAgICAgIHJldHVybiBcInJ1bnNcIjtcbiAgICBjYXNlIFRva2VuS2luZC5BcmdzS2V5d29yZDpcbiAgICAgIHJldHVybiBcImFyZ3NcIjtcbiAgICBjYXNlIFRva2VuS2luZC5FbnZLZXl3b3JkOlxuICAgICAgcmV0dXJuIFwiZW52XCI7XG4gICAgY2FzZSBUb2tlbktpbmQuU2VjcmV0c0tleXdvcmQ6XG4gICAgICByZXR1cm4gXCJzZWNyZXRzXCI7XG5cbiAgICBjYXNlIFRva2VuS2luZC5FcXVhbDpcbiAgICAgIHJldHVybiBcIj1cIjtcbiAgICBjYXNlIFRva2VuS2luZC5Db21tYTpcbiAgICAgIHJldHVybiBcIixcIjtcblxuICAgIGNhc2UgVG9rZW5LaW5kLkxlZnRDdXJseUJyYWNrZXQ6XG4gICAgICByZXR1cm4gXCJ7XCI7XG4gICAgY2FzZSBUb2tlbktpbmQuUmlnaHRDdXJseUJyYWNrZXQ6XG4gICAgICByZXR1cm4gXCJ9XCI7XG4gICAgY2FzZSBUb2tlbktpbmQuTGVmdFNxdWFyZUJyYWNrZXQ6XG4gICAgICByZXR1cm4gXCJbXCI7XG4gICAgY2FzZSBUb2tlbktpbmQuUmlnaHRTcXVhcmVCcmFja2V0OlxuICAgICAgcmV0dXJuIFwiXVwiO1xuXG4gICAgY2FzZSBUb2tlbktpbmQuSWRlbnRpZmllcjpcbiAgICAgIHJldHVybiBcImlkZW50aWZpZXJcIjtcbiAgICBjYXNlIFRva2VuS2luZC5Db21tZW50OlxuICAgICAgcmV0dXJuIFwiY29tbWVudFwiO1xuXG4gICAgY2FzZSBUb2tlbktpbmQuSW50ZWdlckxpdGVyYWw6XG4gICAgICByZXR1cm4gXCJpbnRlZ2VyXCI7XG4gICAgY2FzZSBUb2tlbktpbmQuU3RyaW5nTGl0ZXJhbDpcbiAgICAgIHJldHVybiBcInN0cmluZ1wiO1xuXG4gICAgY2FzZSBUb2tlbktpbmQuTWlzc2luZzpcbiAgICAgIHJldHVybiBcIm1pc3NpbmdcIjtcbiAgICBjYXNlIFRva2VuS2luZC5VbnJlY29nbml6ZWQ6XG4gICAgICByZXR1cm4gXCJ1bnJlY29nbml6ZWRcIjtcbiAgfVxufVxuXG5leHBvcnQgaW50ZXJmYWNlIFRva2VuIHtcbiAgcmVhZG9ubHkga2luZDogVG9rZW5LaW5kO1xuICByZWFkb25seSByYW5nZTogUmFuZ2U7XG4gIHJlYWRvbmx5IHRleHQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUb2tlbldpdGhUcml2aWEgZXh0ZW5kcyBUb2tlbiB7XG4gIHJlYWRvbmx5IGNvbW1lbnRzQmVmb3JlPzogUmVhZG9ubHlBcnJheTxUb2tlbldpdGhUcml2aWE+O1xuICByZWFkb25seSBjb21tZW50QWZ0ZXI/OiBUb2tlbldpdGhUcml2aWE7XG59XG4iXX0=
